{
	"info": {
		"_postman_id": "fastapi-openfga-rbac-demo",
		"name": "FastAPI OpenFGA RBAC Demo",
		"description": "A simplified collection demonstrating RBAC (Role-Based Access Control) using OpenFGA with organizations and resources.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "fastapi-openfga-rbac"
	},
	"item": [
		{
			"name": "API Info & Health",
			"item": [
				{
					"name": "Root - API Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get basic API information and example usage"
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check API health status"
					},
					"response": []
				},
				{
					"name": "RBAC Model Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/rbac-info",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rbac-info"
							]
						},
						"description": "Get detailed information about the RBAC model implementation"
					},
					"response": []
				}
			],
			"description": "Basic API information and health endpoints"
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "List My Organizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User ID for authorization"
								}
							]
						},
						"description": "List all organizations where the user has at least member access"
					},
					"response": []
				},
				{
					"name": "Get Organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{organization_id}}?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{organization_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User ID for authorization"
								}
							]
						},
						"description": "Get details of a specific organization"
					},
					"response": []
				},
				{
					"name": "Create Organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Acme Corporation\",\n    \"description\": \"A demonstration organization for testing RBAC\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User ID for authorization (becomes admin)"
								}
							]
						},
						"description": "Create a new organization. The creator automatically becomes an admin."
					},
					"response": []
				},
				{
					"name": "Update Organization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Acme Corporation\",\n    \"description\": \"Updated description for the organization\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{organization_id}}?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{organization_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Update an organization (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{organization_id}}?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{organization_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Delete an organization (admin only)"
					},
					"response": []
				},
				{
					"name": "Add Member (Admin Role)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{new_admin_user}}\",\n    \"role\": \"admin\",\n    \"organization_id\": \"{{organization_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{organization_id}}/members?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{organization_id}}",
								"members"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Add a user as admin to the organization"
					},
					"response": []
				},
				{
					"name": "Add Member (Member Role)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{member_user_id}}\",\n    \"role\": \"member\",\n    \"organization_id\": \"{{organization_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{organization_id}}/members?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{organization_id}}",
								"members"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Add a user as member to the organization"
					},
					"response": []
				},
				{
					"name": "Remove Member",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{organization_id}}/members/{{member_user_id}}?role=member&user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{organization_id}}",
								"members",
								"{{member_user_id}}"
							],
							"query": [
								{
									"key": "role",
									"value": "member",
									"description": "Role to remove ('admin' or 'member')"
								},
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Remove a member from the organization"
					},
					"response": []
				}
			],
			"description": "Organization management with RBAC - admin and member roles"
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "List All Resources",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/resources?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User ID for authorization"
								}
							]
						},
						"description": "List all resources the user can view"
					},
					"response": []
				},
				{
					"name": "List Organization Resources",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/resources?user_id={{user_id}}&organization_id={{organization_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User ID for authorization"
								},
								{
									"key": "organization_id",
									"value": "{{organization_id}}",
									"description": "Filter by organization"
								}
							]
						},
						"description": "List resources filtered by organization"
					},
					"response": []
				},
				{
					"name": "Get Resource",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/resources/{{resource_id}}?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources",
								"{{resource_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User ID for authorization"
								}
							]
						},
						"description": "Get details of a specific resource"
					},
					"response": []
				},
				{
					"name": "Create Resource (by Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Production Database\",\n    \"description\": \"Main production database server\",\n    \"resource_type\": \"database\",\n    \"organization_id\": \"{{organization_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/resources?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Create a new resource as an admin"
					},
					"response": []
				},
				{
					"name": "Create Resource (by Member)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"API Gateway\",\n    \"description\": \"Main API gateway for external requests\",\n    \"resource_type\": \"api\",\n    \"organization_id\": \"{{organization_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/resources?user_id={{member_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{member_user_id}}",
									"description": "Member user ID for authorization"
								}
							]
						},
						"description": "Create a new resource as a member (both admin and member can create)"
					},
					"response": []
				},
				{
					"name": "Update Resource",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Production Database\",\n    \"description\": \"Updated description\",\n    \"resource_type\": \"database\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/resources/{{resource_id}}?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources",
								"{{resource_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Update a resource (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Resource",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/resources/{{resource_id}}?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources",
								"{{resource_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID for authorization"
								}
							]
						},
						"description": "Delete a resource (admin only)"
					},
					"response": []
				},
				{
					"name": "Check Resource Permissions (Admin)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/resources/{{resource_id}}/permissions?user_id={{admin_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources",
								"{{resource_id}}",
								"permissions"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{admin_user_id}}",
									"description": "Admin user ID to check permissions for"
								}
							]
						},
						"description": "Check what permissions an admin has on the resource"
					},
					"response": []
				},
				{
					"name": "Check Resource Permissions (Member)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/resources/{{resource_id}}/permissions?user_id={{member_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"resources",
								"{{resource_id}}",
								"permissions"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{member_user_id}}",
									"description": "Member user ID to check permissions for"
								}
							]
						},
						"description": "Check what permissions a member has on the resource"
					},
					"response": []
				}
			],
			"description": "Resource management with inherited permissions from organization roles"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string",
			"description": "Base URL for the FastAPI application"
		},
		{
			"key": "user_id",
			"value": "alice",
			"type": "string",
			"description": "Default user ID (typically an admin)"
		},
		{
			"key": "admin_user_id",
			"value": "alice",
			"type": "string",
			"description": "Admin user ID for testing admin operations"
		},
		{
			"key": "member_user_id",
			"value": "bob",
			"type": "string",
			"description": "Member user ID for testing member operations"
		},
		{
			"key": "new_admin_user",
			"value": "charlie",
			"type": "string",
			"description": "Another admin user for testing"
		},
		{
			"key": "organization_id",
			"value": "",
			"type": "string",
			"description": "Organization ID (set after creating an organization)"
		},
		{
			"key": "resource_id",
			"value": "",
			"type": "string",
			"description": "Resource ID (set after creating a resource)"
		}
	]
}